{"ast":null,"code":"import { max, range, tickStep } from \"d3-array\";\nimport { slice } from \"./array\";\nimport { blurX, blurY } from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function () {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20,\n      // blur radius\n  k = 2,\n      // log2(grid cell size)\n  o = r * 3,\n      // grid offset, to pad for blur\n  n = dx + o * 2 >> k,\n      // grid width\n  m = dy + o * 2 >> k,\n      // grid height\n  threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n    data.forEach(function (d, i, data) {\n      var xi = +x(d, i, data) + o >> k,\n          yi = +y(d, i, data) + o >> k,\n          wi = +weight(d, i, data);\n\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    }); // TODO Optimize.\n\n    blurX({\n      width: n,\n      height: m,\n      data: values0\n    }, {\n      width: n,\n      height: m,\n      data: values1\n    }, r >> k);\n    blurY({\n      width: n,\n      height: m,\n      data: values1\n    }, {\n      width: n,\n      height: m,\n      data: values0\n    }, r >> k);\n    blurX({\n      width: n,\n      height: m,\n      data: values0\n    }, {\n      width: n,\n      height: m,\n      data: values1\n    }, r >> k);\n    blurY({\n      width: n,\n      height: m,\n      data: values1\n    }, {\n      width: n,\n      height: m,\n      data: values0\n    }, r >> k);\n    blurX({\n      width: n,\n      height: m,\n      data: values0\n    }, {\n      width: n,\n      height: m,\n      data: values1\n    }, r >> k);\n    blurY({\n      width: n,\n      height: m,\n      data: values1\n    }, {\n      width: n,\n      height: m,\n      data: values0\n    }, r >> k);\n    var tz = threshold(values0); // Convert number of thresholds into uniform thresholds.\n\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours().thresholds(tz).size([n, m])(values0).map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  } // TODO Optimize.\n\n\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = dx + o * 2 >> k;\n    m = dy + o * 2 >> k;\n    return density;\n  }\n\n  density.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function (_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function (_) {\n    if (!arguments.length) return [dx, dy];\n\n    var _0 = Math.ceil(_[0]),\n        _1 = Math.ceil(_[1]);\n\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function (_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function (_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}","map":{"version":3,"names":["max","range","tickStep","slice","blurX","blurY","constant","contours","defaultX","d","defaultY","defaultWeight","x","y","weight","dx","dy","r","k","o","n","m","threshold","density","data","values0","Float32Array","values1","forEach","i","xi","yi","wi","width","height","tz","Array","isArray","stop","Math","floor","shift","thresholds","size","map","transform","geometry","value","pow","coordinates","transformPolygon","transformRing","transformPoint","resize","_","arguments","length","_0","ceil","_1","Error","cellSize","log","LN2","call","bandwidth","sqrt","round"],"sources":["/Users/saicharanchinna/Documents/Arty-Crafty-UI/node_modules/d3-contour/src/density.js"],"sourcesContent":["import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}