{"ast":null,"code":"var _jsxFileName = \"/Users/saicharanchinna/Documents/Arty-Crafty-UI/src/shared/components/core/checkbox/CheckboxComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./CheckboxComponent.scss\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport LabelComponent from \"../label/LabelComponent\";\nimport ErrorTextComponent from \"../error/ErrorTextComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckBoxComponent = props => {\n  _s();\n\n  const {\n    inputProps,\n    checked,\n    value,\n    onChange,\n    required,\n    labelText,\n    errorMessage,\n    hasError,\n    id\n  } = props;\n  let {\n    showFullLabel\n  } = props;\n  if (showFullLabel === undefined) showFullLabel = false;\n  const [tmpChecked, setTmpChecked] = useState(checked);\n  const [mode, setMode] = useState('inline');\n  const showLabel = props.showLabel !== undefined ? props.showLabel : !!(labelText && labelText.length > 0);\n  useEffect(() => {\n    setTmpChecked(checked || false);\n  }, [checked]);\n  useEffect(() => {\n    setMode(props.mode || 'inline');\n  }, [props.mode]);\n  const handleChange = useCallback(checked => {\n    setTmpChecked(checked);\n\n    if (onChange) {\n      onChange(checked);\n    }\n  }, [onChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'checkbox-component component ' + (tmpChecked ? 'checked ' : '') + (showFullLabel ? 'full-label ' : ''),\n    onClick: event => {\n      if (mode === \"block\") {\n        event.preventDefault();\n        handleChange(!checked);\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"checkbox-container \" + (inputProps !== null && inputProps !== void 0 && inputProps.disabled ? 'disable' : ''),\n      children: [showLabel && /*#__PURE__*/_jsxDEV(LabelComponent, {\n        required: required,\n        title: labelText || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        checked: checked,\n        id: id,\n        onChange: e => {\n          if (mode === \"inline\") {\n            handleChange(e.target.checked);\n          }\n        },\n        ...inputProps,\n        className: 'checkbox-field',\n        type: \"checkbox\",\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"checkbox-checkmark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), errorMessage && hasError && /*#__PURE__*/_jsxDEV(ErrorTextComponent, {\n      error: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CheckBoxComponent, \"yOu1xQ+ZcrqPeLZ6YM613S8lzEM=\");\n\n_c = CheckBoxComponent;\nexport default CheckBoxComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBoxComponent\");","map":{"version":3,"names":["useCallback","useEffect","useState","LabelComponent","ErrorTextComponent","CheckBoxComponent","props","inputProps","checked","value","onChange","required","labelText","errorMessage","hasError","id","showFullLabel","undefined","tmpChecked","setTmpChecked","mode","setMode","showLabel","length","handleChange","event","preventDefault","disabled","e","target"],"sources":["/Users/saicharanchinna/Documents/Arty-Crafty-UI/src/shared/components/core/checkbox/CheckboxComponent.tsx"],"sourcesContent":["import \"./CheckboxComponent.scss\";\nimport {InputHTMLAttributes, useCallback, useEffect, useState} from \"react\";\nimport LabelComponent from \"../label/LabelComponent\";\nimport ErrorTextComponent from \"../error/ErrorTextComponent\";\n\nexport interface CheckBoxComponentProps {\n    mode?: 'inline' | 'block';\n    inputProps?: InputHTMLAttributes<HTMLInputElement>;\n    checked?: boolean;\n    value?: any;\n    onChange?: (isChecked: boolean) => void;\n    showLabel?: boolean;\n    showFullLabel?: boolean;\n    labelText?: string;\n    required?: boolean;\n    errorMessage?: string;\n    hasError?: boolean;\n    id?:any\n}\n\nconst CheckBoxComponent = (props: CheckBoxComponentProps) => {\n\n    const {inputProps, checked, value, onChange, required, labelText, errorMessage, hasError, id} = props;\n\n    let { showFullLabel } = props;\n\n    if (showFullLabel === undefined) showFullLabel = false;\n\n    const [tmpChecked, setTmpChecked] = useState(checked);\n    const [mode, setMode] = useState<'inline' | 'block'>('inline');\n\n    const showLabel =\n        props.showLabel !== undefined\n            ? props.showLabel\n            : !!(labelText && labelText.length > 0);\n\n    useEffect(() => {\n        setTmpChecked(checked || false);\n    }, [checked]);\n\n    useEffect(() => {\n        setMode(props.mode || 'inline');\n    }, [props.mode]);\n\n    const handleChange = useCallback((checked: boolean) => {\n        setTmpChecked(checked);\n        if (onChange) {\n            onChange(checked)\n        }\n    }, [onChange]);\n\n    return (\n        <div\n            className={'checkbox-component component ' + (tmpChecked ? 'checked ' : '') + (showFullLabel ? 'full-label ' : '')}\n            onClick={(event) => {\n                if (mode === \"block\") {\n                    event.preventDefault();\n                    handleChange(!checked);\n                }\n            }}>\n            <label className={\"checkbox-container \" + (inputProps?.disabled ? 'disable' : '')}>\n                {showLabel && <LabelComponent required={required} title={labelText || ''}/>}\n                <input\n                    checked={checked}\n                    id={id}\n                    onChange={(e: any) => {\n                        if (mode === \"inline\") {\n                            handleChange(e.target.checked);\n                        }\n                    }}\n                    {...inputProps}\n                    className={'checkbox-field'}\n                    type=\"checkbox\"\n                    value={value}\n                />\n                <span className=\"checkbox-checkmark\"/>\n            </label>\n            {(errorMessage && hasError) && (\n                <ErrorTextComponent error={errorMessage}/>\n            )}\n        </div>\n    );\n\n};\n\nexport default CheckBoxComponent;"],"mappings":";;;AAAA,OAAO,0BAAP;AACA,SAA6BA,WAA7B,EAA0CC,SAA1C,EAAqDC,QAArD,QAAoE,OAApE;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;;;AAiBA,MAAMC,iBAAiB,GAAIC,KAAD,IAAmC;EAAA;;EAEzD,MAAM;IAACC,UAAD;IAAaC,OAAb;IAAsBC,KAAtB;IAA6BC,QAA7B;IAAuCC,QAAvC;IAAiDC,SAAjD;IAA4DC,YAA5D;IAA0EC,QAA1E;IAAoFC;EAApF,IAA0FT,KAAhG;EAEA,IAAI;IAAEU;EAAF,IAAoBV,KAAxB;EAEA,IAAIU,aAAa,KAAKC,SAAtB,EAAiCD,aAAa,GAAG,KAAhB;EAEjC,MAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAACM,OAAD,CAA5C;EACA,MAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAqB,QAArB,CAAhC;EAEA,MAAMoB,SAAS,GACXhB,KAAK,CAACgB,SAAN,KAAoBL,SAApB,GACMX,KAAK,CAACgB,SADZ,GAEM,CAAC,EAAEV,SAAS,IAAIA,SAAS,CAACW,MAAV,GAAmB,CAAlC,CAHX;EAKAtB,SAAS,CAAC,MAAM;IACZkB,aAAa,CAACX,OAAO,IAAI,KAAZ,CAAb;EACH,CAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;EAIAP,SAAS,CAAC,MAAM;IACZoB,OAAO,CAACf,KAAK,CAACc,IAAN,IAAc,QAAf,CAAP;EACH,CAFQ,EAEN,CAACd,KAAK,CAACc,IAAP,CAFM,CAAT;EAIA,MAAMI,YAAY,GAAGxB,WAAW,CAAEQ,OAAD,IAAsB;IACnDW,aAAa,CAACX,OAAD,CAAb;;IACA,IAAIE,QAAJ,EAAc;MACVA,QAAQ,CAACF,OAAD,CAAR;IACH;EACJ,CAL+B,EAK7B,CAACE,QAAD,CAL6B,CAAhC;EAOA,oBACI;IACI,SAAS,EAAE,mCAAmCQ,UAAU,GAAG,UAAH,GAAgB,EAA7D,KAAoEF,aAAa,GAAG,aAAH,GAAmB,EAApG,CADf;IAEI,OAAO,EAAGS,KAAD,IAAW;MAChB,IAAIL,IAAI,KAAK,OAAb,EAAsB;QAClBK,KAAK,CAACC,cAAN;QACAF,YAAY,CAAC,CAAChB,OAAF,CAAZ;MACH;IACJ,CAPL;IAAA,wBAQI;MAAO,SAAS,EAAE,yBAAyBD,UAAU,SAAV,IAAAA,UAAU,WAAV,IAAAA,UAAU,CAAEoB,QAAZ,GAAuB,SAAvB,GAAmC,EAA5D,CAAlB;MAAA,WACKL,SAAS,iBAAI,QAAC,cAAD;QAAgB,QAAQ,EAAEX,QAA1B;QAAoC,KAAK,EAAEC,SAAS,IAAI;MAAxD;QAAA;QAAA;QAAA;MAAA,QADlB,eAEI;QACI,OAAO,EAAEJ,OADb;QAEI,EAAE,EAAEO,EAFR;QAGI,QAAQ,EAAGa,CAAD,IAAY;UAClB,IAAIR,IAAI,KAAK,QAAb,EAAuB;YACnBI,YAAY,CAACI,CAAC,CAACC,MAAF,CAASrB,OAAV,CAAZ;UACH;QACJ,CAPL;QAAA,GAQQD,UARR;QASI,SAAS,EAAE,gBATf;QAUI,IAAI,EAAC,UAVT;QAWI,KAAK,EAAEE;MAXX;QAAA;QAAA;QAAA;MAAA,QAFJ,eAeI;QAAM,SAAS,EAAC;MAAhB;QAAA;QAAA;QAAA;MAAA,QAfJ;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ,EAyBMI,YAAY,IAAIC,QAAjB,iBACG,QAAC,kBAAD;MAAoB,KAAK,EAAED;IAA3B;MAAA;MAAA;MAAA;IAAA,QA1BR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgCH,CA/DD;;GAAMR,iB;;KAAAA,iB;AAiEN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}