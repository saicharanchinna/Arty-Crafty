{"ast":null,"code":"import Communications from './communications.service';\nimport queryString from \"query-string\";\nimport axios from \"axios\";\nimport ApiService from './api.service';\nimport moment from \"moment\";\nimport AlertService from \"./alert.service\";\nimport RouteConfigService from \"./route-config.service\";\nimport AccountService from \"./modules/account.service\";\nimport LocalStorageService from \"./local-storage.service\";\nimport { v4 as uuidv4 } from 'uuid';\nimport UserService from \"./modules/user.service\";\nimport StaticDataService from \"./modules/static-data.service\";\nimport * as yup from \"yup\";\nyup.addMethod(yup.mixed, 'atLeastOne', args => {\n  const {\n    message,\n    predicate\n  } = args; // @ts-ignore\n\n  return this.test('atLeastOne', message, list => {\n    // If there are 2+ elements after filtering, we know atMostOne must be false.\n    console.log(predicate);\n    return Object.keys(list).filter(item => item).length > 0;\n  });\n});\nconst CurrentDate = moment();\n\nconst parseQueryString = q => {\n  return queryString.parse(q.replace('?', ''));\n};\n\nconst getBytesInMB = bytes => {\n  return bytes / (1024 * 1024);\n};\n\nconst formatSizeUnits = function (bytes) {\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n  if (bytes === 0) {\n    return '0 Bytes';\n  }\n\n  const k = 1024;\n  const dm = decimals <= 0 ? 0 : decimals || 2;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n};\n\nconst getRandomID = length => {\n  let text = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (let i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n};\n\nconst getUUID = () => {\n  return uuidv4();\n};\n\nconst handleErrors = (setErrors, err) => {\n  if (err.errors) {\n    const errors = {};\n\n    for (let field in err.errors) {\n      if (err.errors.hasOwnProperty(field)) {\n        errors[field] = err.errors[field][0];\n      }\n    }\n\n    setErrors(errors);\n  } else if (err.error) {\n    AlertService.showToast(err.error);\n  }\n};\n\nconst openDialog = component => {\n  return new Promise((resolve, reject) => {\n    Communications.DialogStateSubject.next({\n      component,\n      promise: {\n        resolve,\n        reject\n      }\n    });\n  });\n};\n\nconst getCancelToken = () => {\n  return axios.CancelToken.source();\n};\n\nconst getPayloadFilterDates = mode => {\n  const payload = {\n    start_date: '',\n    end_date: moment().endOf('day').format('YYYY-MM-DD')\n  };\n\n  switch (mode) {\n    case \"day\":\n      payload.start_date = moment().startOf('day').format('YYYY-MM-DD');\n      break;\n\n    case \"week\":\n      payload.start_date = moment().subtract(1, 'week').startOf('day').format('YYYY-MM-DD');\n      break;\n\n    case \"month\":\n      payload.start_date = moment().subtract(1, \"month\").startOf('day').format('YYYY-MM-DD');\n      break;\n\n    case \"year\":\n      payload.start_date = moment().subtract(1, \"year\").startOf('day').format('YYYY-MM-DD');\n      break;\n  }\n\n  return payload;\n};\n\nconst convertDateFormat = function (date) {\n  let format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'YYYY-MM-DD';\n  return moment(date).format(format);\n};\n\nconst getFlatJsonFromNestedJSON = function (jsonData) {\n  let rootName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  let ignoreList = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  const appendFormData = (data, root) => {\n    let newObj = {};\n    let tmp = {};\n\n    if (!ignore(root)) {\n      console.log(data, root);\n      root = root || '';\n\n      if (data instanceof File) {\n        console.log(root, data, 'appending');\n        newObj[root] = data;\n      } else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n          tmp = appendFormData(data[i], root + '[' + i + ']');\n          newObj = { ...newObj,\n            ...tmp\n          };\n        }\n      } else if (typeof data === 'object' && data) {\n        for (let key in data) {\n          if (data.hasOwnProperty(key)) {\n            if (root === '') {\n              tmp = appendFormData(data[key], key);\n              newObj = { ...newObj,\n                ...tmp\n              };\n            } else {\n              tmp = appendFormData(data[key], root + '.' + key);\n              newObj = { ...newObj,\n                ...tmp\n              };\n            }\n          }\n        }\n      } else {\n        if (data !== null && typeof data !== 'undefined') {\n          newObj[root] = data;\n          console.log(root, data, newObj, 'appending');\n        }\n      }\n    }\n\n    return newObj;\n  };\n\n  const ignore = root => {\n    return Array.isArray(ignoreList) && ignoreList.some(x => {\n      return x === root;\n    });\n  };\n\n  return appendFormData(jsonData, rootName);\n};\n\nconst getFormDataFromJSON = function (obj) {\n  let rootName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  let ignoreList = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  const formData = new FormData();\n\n  const appendFormData = (data, root) => {\n    if (!ignore(root)) {\n      root = root || '';\n\n      if (data instanceof File) {\n        formData.append(root, data);\n      } else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n          appendFormData(data[i], root + '[' + i + ']');\n        }\n      } else if (typeof data === 'object' && data) {\n        for (let key in data) {\n          if (data.hasOwnProperty(key)) {\n            if (root === '') {\n              appendFormData(data[key], key);\n            } else {\n              appendFormData(data[key], root + '.' + key);\n            }\n          }\n        }\n      } else {\n        if (data !== null && typeof data !== 'undefined') {\n          formData.append(root, data);\n        }\n      }\n    }\n  };\n\n  const ignore = root => {\n    return Array.isArray(ignoreList) && ignoreList.some(x => {\n      return x === root;\n    });\n  };\n\n  appendFormData(obj, rootName);\n  return formData;\n};\n\nconst capitalizeFirstLetter = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nconst kFormatter = num => {\n  // @ts-ignore\n  return Math.abs(num) > 999 ? Math.sign(num) * (Math.abs(num) / 1000).toFixed(1) + 'k' : Math.sign(num) * Math.abs(num);\n};\n\nconst getLettersFromNumber = number => {\n  const previousLetters = number >= 26 ? getLettersFromNumber(Math.floor(number / 26) - 1) : '';\n  const lastLetter = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[number % 26];\n  return previousLetters + lastLetter;\n};\n\nconst getRandomNumberBetweenRange = (startingNumber, endingNumber) => {\n  startingNumber = Math.ceil(startingNumber);\n  endingNumber = Math.floor(endingNumber);\n  return Math.floor(Math.random() * (endingNumber - startingNumber + 1)) + startingNumber;\n};\n\nconst getMinsAndSecondsFromSeconds = numberOfSeconds => {\n  const minutes = Math.floor(numberOfSeconds / 60);\n  const seconds = numberOfSeconds % 60;\n  return {\n    minutes: minutes < 10 ? '0' + minutes : minutes,\n    seconds: seconds < 10 ? '0' + seconds : seconds\n  };\n};\n\nconst downloadFile = function (url, fileName) {\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'pdf';\n\n  switch (type) {\n    case 'image':\n      axios.get(url, {\n        headers: {\n          'Content-Type': 'image/*'\n        }\n      }).then(data => {\n        const blob = new Blob([data], {\n          type: 'image/*' // must match the Accept type\n\n        });\n        const link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = fileName;\n        link.click();\n      }, error => {\n        console.log('error');\n      });\n      break;\n\n    case 'pdf':\n      axios.get(url, {\n        headers: {\n          Accept: 'application/pdf'\n        },\n        responseType: 'blob'\n      }).then(data => {\n        const blob = new Blob([data], {\n          type: 'application/pdf' // must match the Accept type\n\n        });\n        const link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = fileName;\n        link.click();\n        window.URL.revokeObjectURL(link.href);\n      }, error => {\n        console.log('error');\n      });\n      break;\n\n    case 'csv':\n      axios.get(url, {\n        headers: {\n          Accept: 'application/csv'\n        },\n        responseType: 'blob'\n      }).then(response => {\n        const blob = new Blob([response.data], {\n          type: \"application/octet-stream\" // or Content-type: \"application/vnd.ms-excel\"\n\n        });\n        const link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = fileName;\n        link.click();\n        window.URL.revokeObjectURL(link.href);\n      }, error => {\n        console.log('error');\n      });\n      break;\n\n    default:\n      console.log(type, ' file download not supported');\n  }\n};\n\nconst generateBlobFileFromUrl = (attachmentUrl, attachmentTitle, attachmentType) => {\n  return fetch(attachmentUrl).then(res => res.blob()).then(myBlob => {\n    console.log(myBlob);\n    const myFile = new File([myBlob], attachmentTitle, {\n      type: attachmentType\n    });\n    return myFile;\n  });\n};\n\nconst getFlatQuestionList = stepData => {\n  const flatQuestionList = [];\n\n  const questionListParser = arrayData => {\n    arrayData.forEach((option, index, array) => {\n      if (option !== null && option !== void 0 && option.questions) {\n        option === null || option === void 0 ? void 0 : option.questions.forEach(question => {\n          flatQuestionList.push(question);\n\n          if (question !== null && question !== void 0 && question.options) {\n            questionListParser(question === null || question === void 0 ? void 0 : question.options);\n          }\n        });\n      }\n    });\n  };\n\n  if (stepData !== null && stepData !== void 0 && stepData.questions) {\n    stepData === null || stepData === void 0 ? void 0 : stepData.questions.forEach(value => {\n      flatQuestionList.push(value);\n\n      if (value !== null && value !== void 0 && value.options) {\n        questionListParser(value === null || value === void 0 ? void 0 : value.options);\n      }\n    });\n  }\n\n  return flatQuestionList;\n};\n\nconst getArrayOfValuesOfOneKeyFromJSON = (array, key) => {\n  if (array && array.length > 0) {\n    const arrayWithDesiredKeyValue = array.map(item => {\n      return item[key];\n    });\n    return arrayWithDesiredKeyValue;\n  } else {\n    return [];\n  }\n};\n\nconst createValidationsObject = questions => {\n  const generateValidationsForQuestion = function (question) {\n    let parentQuestion = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let parentOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    if (question !== null && question !== void 0 && question.isRequired) {\n      question.validationType = 'mixed';\n      const validationsObj = {};\n      question.validations = [];\n      console.log(parentQuestion);\n\n      if (parentQuestion && parentOption) {\n        validationsObj.parent = parentQuestion.title + '.' + parentOption.code;\n        validationsObj.parentParams = [];\n        console.log(validationsObj);\n\n        if (parentQuestion !== null && parentQuestion !== void 0 && parentQuestion.isRequired) {\n          const parentValidationsObj = {\n            type: 'when',\n            params: [validationsObj.parent, {\n              is: true,\n              then: yup[question.validationType]()[\"required\"]('Required'),\n              otherwise: yup[question.validationType]().nullable()\n            }]\n          };\n          question.validations.push(parentValidationsObj);\n\n          if (parentQuestion.formControlType === \"RadioButton\") {\n            validationsObj.parent = parentQuestion.title;\n            const vobj = {\n              type: 'when',\n              params: [validationsObj.parent, {\n                is: parentOption.code,\n                then: yup[question.validationType]()[\"required\"]('Required'),\n                otherwise: yup[question.validationType]().nullable()\n              }]\n            };\n            question.validations.push(vobj);\n          }\n        }\n      } else {\n        validationsObj.type = \"required\";\n        validationsObj.params = [\"Required\"];\n        question.validations.push(validationsObj);\n      }\n\n      if (question.formControlType === \"CheckBox\") {\n        validationsObj.type = \"test\";\n        validationsObj.params = ['atLeastOne', 'Select at least one item', answers => {\n          return answers ? Object.values(answers).some(answer => answer === true) : false;\n        }];\n        question.validations.push(validationsObj);\n      }\n    }\n\n    if (question.options) {\n      question.options.forEach(option => {\n        if (option.questions) {\n          option.questions.forEach(subQuestion => {\n            if (!question.validations) {\n              question.validations = [];\n            }\n\n            question.validations.push(generateValidationsForQuestion(subQuestion, question, option));\n          });\n        }\n      });\n    }\n\n    return question;\n  };\n\n  return questions === null || questions === void 0 ? void 0 : questions.map(question => {\n    return generateValidationsForQuestion(question);\n  });\n};\n\nconst createYupSchema = (mainSchema, config) => {\n  const generateYupSchema = question => {\n    console.log(question);\n    const {\n      code,\n      validationType,\n      options,\n      validations = []\n    } = question;\n\n    if (!yup[validationType]) {\n      return;\n    }\n\n    let validator = yup[validationType]();\n    validations.forEach(validation => {\n      const {\n        params,\n        type\n      } = validation;\n\n      if (!validator[type]) {\n        return;\n      }\n\n      validator = validator[type](...params);\n    });\n    mainSchema[code] = validator;\n\n    if (options) {\n      options === null || options === void 0 ? void 0 : options.forEach(option => {\n        if (option !== null && option !== void 0 && option.questions) {\n          var _option$questions;\n\n          option === null || option === void 0 ? void 0 : (_option$questions = option.questions) === null || _option$questions === void 0 ? void 0 : _option$questions.forEach(subQuestion => {\n            console.log({\n              subQuestion\n            });\n            generateYupSchema(subQuestion);\n          });\n        }\n      });\n    }\n  };\n\n  generateYupSchema(config);\n  return mainSchema;\n};\n\nconst CommonService = {\n  CurrentDate,\n  parseQueryString,\n  handleErrors,\n  openDialog,\n  formatSizeUnits,\n  getRandomID,\n  getBytesInMB,\n  getCancelToken,\n  getPayloadFilterDates,\n  getFormDataFromJSON,\n  capitalizeFirstLetter,\n  kFormatter,\n  getUUID,\n  getLettersFromNumber,\n  getRandomNumberBetweenRange,\n  getMinsAndSecondsFromSeconds,\n  convertDateFormat,\n  downloadFile,\n  generateBlobFileFromUrl,\n  getFlatJsonFromNestedJSON,\n  getFlatQuestionList,\n  getArrayOfValuesOfOneKeyFromJSON,\n  createValidationsObject,\n  createYupSchema,\n  _api: ApiService,\n  _communications: Communications,\n  _routeConfig: RouteConfigService,\n  _alert: AlertService,\n  _localStorage: LocalStorageService,\n  _account: AccountService,\n  _user: UserService,\n  _staticData: StaticDataService\n};\nexport default CommonService;","map":{"version":3,"names":["Communications","queryString","axios","ApiService","moment","AlertService","RouteConfigService","AccountService","LocalStorageService","v4","uuidv4","UserService","StaticDataService","yup","addMethod","mixed","args","message","predicate","test","list","console","log","Object","keys","filter","item","length","CurrentDate","parseQueryString","q","parse","replace","getBytesInMB","bytes","formatSizeUnits","decimals","k","dm","sizes","i","Math","floor","parseFloat","pow","toFixed","getRandomID","text","possible","charAt","random","getUUID","handleErrors","setErrors","err","errors","field","hasOwnProperty","error","showToast","openDialog","component","Promise","resolve","reject","DialogStateSubject","next","promise","getCancelToken","CancelToken","source","getPayloadFilterDates","mode","payload","start_date","end_date","endOf","format","startOf","subtract","convertDateFormat","date","getFlatJsonFromNestedJSON","jsonData","rootName","ignoreList","appendFormData","data","root","newObj","tmp","ignore","File","Array","isArray","key","some","x","getFormDataFromJSON","obj","formData","FormData","append","capitalizeFirstLetter","string","toUpperCase","slice","kFormatter","num","abs","sign","getLettersFromNumber","number","previousLetters","lastLetter","getRandomNumberBetweenRange","startingNumber","endingNumber","ceil","getMinsAndSecondsFromSeconds","numberOfSeconds","minutes","seconds","downloadFile","url","fileName","type","get","headers","then","blob","Blob","link","document","createElement","href","window","URL","createObjectURL","download","click","Accept","responseType","revokeObjectURL","response","generateBlobFileFromUrl","attachmentUrl","attachmentTitle","attachmentType","fetch","res","myBlob","myFile","getFlatQuestionList","stepData","flatQuestionList","questionListParser","arrayData","forEach","option","index","array","questions","question","push","options","value","getArrayOfValuesOfOneKeyFromJSON","arrayWithDesiredKeyValue","map","createValidationsObject","generateValidationsForQuestion","parentQuestion","parentOption","isRequired","validationType","validationsObj","validations","parent","title","code","parentParams","parentValidationsObj","params","is","otherwise","nullable","formControlType","vobj","answers","values","answer","subQuestion","createYupSchema","mainSchema","config","generateYupSchema","validator","validation","CommonService","_api","_communications","_routeConfig","_alert","_localStorage","_account","_user","_staticData"],"sources":["/Users/saicharanchinna/Documents/Arty-Crafty-UI/src/shared/services/common.service.ts"],"sourcesContent":["import Communications from './communications.service';\nimport queryString from \"query-string\";\nimport {FormikErrors} from \"formik\";\nimport axios, {CancelTokenSource} from \"axios\";\nimport ApiService from './api.service';\nimport moment, {Moment} from \"moment\";\nimport AlertService from \"./alert.service\";\nimport RouteConfigService from \"./route-config.service\";\nimport AccountService from \"./modules/account.service\";\nimport LocalStorageService from \"./local-storage.service\";\nimport {v4 as uuidv4} from 'uuid';\nimport UserService from \"./modules/user.service\";\nimport StaticDataService from \"./modules/static-data.service\";\nimport * as yup from \"yup\";\nimport {IIntakeFormQuestion} from \"../models/test-panel.model\";\n\nyup.addMethod(yup.mixed, 'atLeastOne', (args) => {\n    const {message, predicate} = args;\n    // @ts-ignore\n    return this.test('atLeastOne', message, (list: any) => {\n        // If there are 2+ elements after filtering, we know atMostOne must be false.\n        console.log(predicate);\n        return Object.keys(list).filter(item => item).length > 0\n    })\n});\n\nconst CurrentDate: Moment = moment();\n\nconst parseQueryString = (q: string): any => {\n    return queryString.parse(q.replace('?', ''));\n}\n\nconst getBytesInMB = (bytes: number) => {\n    return bytes / (1024 * 1024);\n}\n\nconst formatSizeUnits = (bytes: number, decimals = 2) => {\n    if (bytes === 0) {\n        return '0 Bytes';\n    }\n    const k = 1024;\n    const dm = decimals <= 0 ? 0 : decimals || 2;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nconst getRandomID = (length: number) => {\n    let text = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}\n\nconst getUUID = () => {\n    return uuidv4();\n}\n\nconst handleErrors = (setErrors: (errors: FormikErrors<any>) => void, err: any) => {\n    if (err.errors) {\n        const errors: any = {};\n        for (let field in err.errors) {\n            if (err.errors.hasOwnProperty(field)) {\n                errors[field] = err.errors[field][0];\n            }\n        }\n        setErrors(errors);\n    } else if (err.error) {\n        AlertService.showToast(err.error);\n    }\n}\n\nconst openDialog = (component: any) => {\n    return new Promise((resolve, reject) => {\n        Communications.DialogStateSubject.next({component, promise: {resolve, reject}})\n    });\n}\n\nconst getCancelToken = (): CancelTokenSource => {\n    return axios.CancelToken.source();\n}\n\nconst getPayloadFilterDates = (mode: 'day' | 'week' | 'month' | 'year'): { start_date: string, end_date: string } => {\n    const payload = {start_date: '', end_date: moment().endOf('day').format('YYYY-MM-DD')}\n    switch (mode) {\n        case \"day\":\n            payload.start_date = moment().startOf('day').format('YYYY-MM-DD')\n            break;\n        case \"week\":\n            payload.start_date = moment().subtract(1, 'week').startOf('day').format('YYYY-MM-DD')\n            break;\n        case \"month\":\n            payload.start_date = moment().subtract(1, \"month\").startOf('day').format('YYYY-MM-DD')\n            break;\n        case \"year\":\n            payload.start_date = moment().subtract(1, \"year\").startOf('day').format('YYYY-MM-DD')\n            break;\n    }\n    return payload;\n}\n\nconst convertDateFormat = (date: Date, format: string = 'YYYY-MM-DD') => {\n    return moment(date).format(format);\n}\n\nconst getFlatJsonFromNestedJSON = (jsonData: any, rootName: string = \"\", ignoreList: any[] = []): any => {\n\n    const appendFormData = (data: any, root: any) => {\n        let newObj: any = {};\n        let tmp: any = {};\n        if (!ignore(root)) {\n            console.log(data, root);\n            root = root || '';\n            if (data instanceof File) {\n                console.log(root, data, 'appending');\n                newObj[root] = data;\n            } else if (Array.isArray(data)) {\n                for (let i = 0; i < data.length; i++) {\n                    tmp = appendFormData(data[i], root + '[' + i + ']');\n                    newObj = {...newObj, ...tmp}\n                }\n            } else if (typeof data === 'object' && data) {\n                for (let key in data) {\n                    if (data.hasOwnProperty(key)) {\n                        if (root === '') {\n                            tmp = appendFormData(data[key], key);\n                            newObj = {...newObj, ...tmp}\n                        } else {\n                            tmp = appendFormData(data[key], root + '.' + key);\n                            newObj = {...newObj, ...tmp}\n                        }\n                    }\n                }\n            } else {\n                if (data !== null && typeof data !== 'undefined') {\n                    newObj[root] = data;\n                    console.log(root, data, newObj, 'appending');\n                }\n            }\n        }\n        return newObj;\n    }\n\n    const ignore = (root: any) => {\n        return Array.isArray(ignoreList)\n            && ignoreList.some((x) => {\n                return x === root;\n            });\n    }\n\n    return appendFormData(jsonData, rootName);\n};\n\nconst getFormDataFromJSON = (obj: any, rootName = '', ignoreList = []): FormData => {\n\n    const formData = new FormData();\n\n    const appendFormData = (data: any, root: any) => {\n        if (!ignore(root)) {\n            root = root || '';\n            if (data instanceof File) {\n                formData.append(root, data);\n            } else if (Array.isArray(data)) {\n                for (let i = 0; i < data.length; i++) {\n                    appendFormData(data[i], root + '[' + i + ']');\n                }\n            } else if (typeof data === 'object' && data) {\n                for (let key in data) {\n                    if (data.hasOwnProperty(key)) {\n                        if (root === '') {\n                            appendFormData(data[key], key);\n                        } else {\n                            appendFormData(data[key], root + '.' + key);\n                        }\n                    }\n                }\n            } else {\n                if (data !== null && typeof data !== 'undefined') {\n                    formData.append(root, data);\n                }\n            }\n        }\n    }\n\n    const ignore = (root: any) => {\n        return Array.isArray(ignoreList)\n            && ignoreList.some((x: any) => {\n                return x === root;\n            });\n    }\n\n    appendFormData(obj, rootName);\n\n    return formData;\n\n}\nconst capitalizeFirstLetter = (string: string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nconst kFormatter = (num: any) => {\n    // @ts-ignore\n    return Math.abs(num) > 999 ? Math.sign(num) * ((Math.abs(num) / 1000).toFixed(1)) + 'k' : Math.sign(num) * Math.abs(num)\n}\n\nconst getLettersFromNumber = (number: number) => {\n    const previousLetters: any = (number >= 26 ? getLettersFromNumber(Math.floor(number / 26) - 1) : '');\n    const lastLetter = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[number % 26];\n    return previousLetters + lastLetter;\n}\n\nconst getRandomNumberBetweenRange = (startingNumber: number, endingNumber: number) => {\n    startingNumber = Math.ceil(startingNumber);\n    endingNumber = Math.floor(endingNumber);\n    return Math.floor(Math.random() * (endingNumber - startingNumber + 1)) + startingNumber;\n}\n\nconst getMinsAndSecondsFromSeconds = (numberOfSeconds: number) => {\n    const minutes = Math.floor(numberOfSeconds / 60);\n    const seconds = (numberOfSeconds % 60);\n    return {\n        minutes: minutes < 10 ? '0' + minutes : minutes,\n        seconds: seconds < 10 ? '0' + seconds : seconds\n    }\n}\n\nconst downloadFile = (url: string, fileName: any, type = 'pdf') => {\n    switch (type) {\n        case 'image':\n            axios.get(url, {\n                headers: {'Content-Type': 'image/*'}\n            }).then(\n                (data: any) => {\n                    const blob = new Blob([data], {\n                        type: 'image/*' // must match the Accept type\n                    });\n                    const link = document.createElement('a');\n                    link.href = window.URL.createObjectURL(blob);\n                    link.download = fileName;\n                    link.click();\n                }, (error) => {\n                    console.log('error')\n                });\n            break;\n        case 'pdf':\n            axios.get(url, {\n                headers: {Accept: 'application/pdf'}, responseType: 'blob'\n            }).then(\n                (data: any) => {\n                    const blob = new Blob([data], {\n                        type: 'application/pdf' // must match the Accept type\n                    });\n                    const link = document.createElement('a');\n                    link.href = window.URL.createObjectURL(blob);\n                    link.download = fileName;\n                    link.click();\n                    window.URL.revokeObjectURL(link.href);\n                }, (error) => {\n                    console.log('error')\n                });\n            break;\n        case 'csv':\n            axios.get(url, {\n                headers: {Accept: 'application/csv'}, responseType: 'blob'\n            }).then(\n                (response: any) => {\n                    const blob = new Blob([response.data], {\n                        type: \"application/octet-stream\" // or Content-type: \"application/vnd.ms-excel\"\n                    });\n                    const link = document.createElement('a');\n                    link.href = window.URL.createObjectURL(blob);\n                    link.download = fileName;\n                    link.click();\n                    window.URL.revokeObjectURL(link.href);\n                }, (error) => {\n                    console.log('error')\n                });\n            break;\n        default:\n            console.log(type, ' file download not supported');\n    }\n}\n\nconst generateBlobFileFromUrl = (attachmentUrl: string, attachmentTitle: string, attachmentType: string) => {\n    return fetch(attachmentUrl)\n        .then((res) => res.blob())\n        .then((myBlob) => {\n            console.log(myBlob);\n            const myFile = new File([myBlob], attachmentTitle, {\n                type: attachmentType\n            });\n            return myFile;\n        });\n};\n\nconst getFlatQuestionList = (stepData: any): any => {\n    const flatQuestionList: any = [];\n    const questionListParser = (arrayData: []) => {\n        arrayData.forEach((option: any, index, array) => {\n            if (option?.questions) {\n                option?.questions.forEach((question: any) => {\n                    flatQuestionList.push(question);\n                    if (question?.options) {\n                        questionListParser(question?.options);\n                    }\n                })\n            }\n        })\n    }\n    if (stepData?.questions) {\n        stepData?.questions.forEach((value: any) => {\n            flatQuestionList.push(value);\n            if (value?.options) {\n                questionListParser(value?.options);\n            }\n        })\n    }\n    return flatQuestionList;\n\n};\n\nconst getArrayOfValuesOfOneKeyFromJSON = (array: any[], key: string) => {\n    if (array && array.length > 0) {\n        const arrayWithDesiredKeyValue = array.map((item) => {\n            return item[key];\n        });\n        return arrayWithDesiredKeyValue;\n    } else {\n        return [];\n    }\n}\n\nconst createValidationsObject = (questions: any) => {\n\n    const generateValidationsForQuestion = (question: IIntakeFormQuestion, parentQuestion: any = null, parentOption: any = null) => {\n        if (question?.isRequired) {\n            question.validationType = 'mixed';\n            const validationsObj: any = {};\n            question.validations = [];\n            console.log(parentQuestion);\n            if (parentQuestion && parentOption) {\n                validationsObj.parent = parentQuestion.title + '.' + parentOption.code;\n                validationsObj.parentParams = [];\n                console.log(validationsObj);\n                if (parentQuestion?.isRequired) {\n                    const parentValidationsObj = {\n                        type: 'when', params: [validationsObj.parent, {\n                            is: true, then: yup[question.validationType]()[\"required\"]('Required'),\n                            otherwise: yup[question.validationType]().nullable()\n                        }]\n                    }\n                    question.validations.push(parentValidationsObj);\n                    if (parentQuestion.formControlType === \"RadioButton\") {\n                        validationsObj.parent = parentQuestion.title;\n                        const vobj = {\n                            type: 'when', params: [validationsObj.parent, {\n                                is: parentOption.code, then: yup[question.validationType]()[\"required\"]('Required'),\n                                otherwise: yup[question.validationType]().nullable()\n                            }]\n                        }\n                        question.validations.push(vobj);\n                    }\n                }\n            } else {\n                validationsObj.type = \"required\";\n                validationsObj.params = [\"Required\"];\n                question.validations.push(validationsObj);\n            }\n            if (question.formControlType === \"CheckBox\") {\n                validationsObj.type = \"test\";\n                validationsObj.params = ['atLeastOne', 'Select at least one item', (answers: any) => {\n                    return answers ? Object.values(answers).some(answer => answer === true) : false;\n                }];\n                question.validations.push(validationsObj);\n            }\n        }\n        if (question.options) {\n            question.options.forEach((option: any) => {\n                if (option.questions) {\n                    option.questions.forEach((subQuestion: any) => {\n                        if (!question.validations) {\n                            question.validations = [];\n                        }\n                        question.validations.push(generateValidationsForQuestion(subQuestion, question, option));\n                    })\n                }\n            });\n        }\n        return question;\n    };\n    return questions?.map((question: any) => {\n        return generateValidationsForQuestion(question);\n    });\n}\n\nconst createYupSchema = (mainSchema: any, config: any) => {\n\n    const generateYupSchema = (question: IIntakeFormQuestion) => {\n        console.log(question)\n        const {code, validationType, options, validations = []} = question;\n        if (!yup[validationType]) {\n            return;\n        }\n        let validator: any = yup[validationType]();\n        validations.forEach((validation: any) => {\n            const {params, type} = validation;\n            if (!validator[type]) {\n                return;\n            }\n            validator = validator[type](...params);\n        });\n        mainSchema[code] = validator;\n        if (options) {\n            options?.forEach((option: any) => {\n                if (option?.questions) {\n                    option?.questions?.forEach((subQuestion: any) => {\n                        console.log({subQuestion});\n                        generateYupSchema(subQuestion);\n                    })\n                }\n            });\n        }\n    }\n    generateYupSchema(config);\n    return mainSchema;\n}\n\nconst CommonService = {\n    CurrentDate,\n    parseQueryString,\n    handleErrors,\n    openDialog,\n    formatSizeUnits,\n    getRandomID,\n    getBytesInMB,\n    getCancelToken,\n    getPayloadFilterDates,\n    getFormDataFromJSON,\n    capitalizeFirstLetter,\n    kFormatter,\n    getUUID,\n    getLettersFromNumber,\n    getRandomNumberBetweenRange,\n    getMinsAndSecondsFromSeconds,\n    convertDateFormat,\n    downloadFile,\n    generateBlobFileFromUrl,\n    getFlatJsonFromNestedJSON,\n    getFlatQuestionList,\n    getArrayOfValuesOfOneKeyFromJSON,\n    createValidationsObject,\n    createYupSchema,\n\n    _api: ApiService,\n    _communications: Communications,\n    _routeConfig: RouteConfigService,\n    _alert: AlertService,\n    _localStorage: LocalStorageService,\n    _account: AccountService,\n    _user: UserService,\n    _staticData: StaticDataService,\n}\nexport default CommonService;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}