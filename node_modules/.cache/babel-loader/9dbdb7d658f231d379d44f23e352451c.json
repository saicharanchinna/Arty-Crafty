{"ast":null,"code":"var _jsxFileName = \"/Users/saicharanchinna/Documents/Arty-Crafty-UI/src/shared/components/core/formik-select-dropdown/FormikSelectDropdownComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./FormikSelectDropdownComponent.scss\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport SelectDropdownComponent from \"../select-dropdown/SelectDropdownComponent\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormikSelectDropdownComponent = props => {\n  _s();\n\n  const {\n    className,\n    labelText,\n    formikField,\n    required,\n    errorMessage,\n    onUpdate,\n    disabled,\n    id,\n    data,\n    url,\n    extraPayload,\n    defaultData\n  } = props;\n  let {\n    placeholder,\n    noDataMessage,\n    searchable,\n    searchMode,\n    multiple,\n    method,\n    isClearable,\n    dataListKey,\n    hideSelectedOptions,\n    isDataLoading,\n    isDataLoaded,\n    isDataLoadingFailed,\n    size,\n    fullWidth,\n    displayWith,\n    compareWith\n  } = props;\n  if (!placeholder) placeholder = \"Select Your Option\";\n  if (!method) method = \"get\";\n  if (!size) size = \"lg\";\n  if (!searchMode) searchMode = \"clientSide\";\n  if (!dataListKey) dataListKey = \"data.docs\";\n  if (hideSelectedOptions === undefined) hideSelectedOptions = true;\n  if (isClearable === undefined) isClearable = true;\n  if (searchable === undefined) searchable = true;\n  if (multiple === undefined) multiple = false;\n  if (fullWidth === undefined) fullWidth = true;\n  if (!displayWith) displayWith = option => option === null || option === void 0 ? void 0 : option.title;\n  if (!compareWith) compareWith = option => option === null || option === void 0 ? void 0 : option.code;\n  if (!noDataMessage) noDataMessage = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No Data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 41\n  }, this);\n  const {\n    field,\n    form\n  } = formikField;\n  const {\n    name,\n    value\n  } = field;\n  const {\n    setFieldTouched,\n    touched,\n    errors,\n    setFieldValue\n  } = form;\n\n  const hasError = _.get(touched, name) && errors && _.get(errors, name);\n\n  const [formControlValue, setFormControlValue] = useState(value);\n  const showLabel = props.showLabel !== undefined ? props.showLabel : !!(labelText && labelText.length > 0);\n  const onValueChange = useCallback(value => {\n    let tempValue = value || '';\n    setFormControlValue(tempValue);\n    setFieldValue(name, tempValue);\n    setFieldTouched(name);\n\n    if (onUpdate) {\n      onUpdate(tempValue);\n    }\n  }, [name, onUpdate, setFieldTouched, setFieldValue, setFormControlValue]);\n  const onBlur = useCallback(value => {\n    setFieldTouched(name);\n  }, [name, setFieldTouched]);\n  useEffect(() => {\n    setFormControlValue(value || '');\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `formik-select-dropdown-component component`,\n    children: /*#__PURE__*/_jsxDEV(SelectDropdownComponent, {\n      id: id,\n      showLabel: showLabel,\n      labelText: labelText,\n      required: required,\n      fullWidth: fullWidth,\n      className: className,\n      multiple: multiple,\n      hideSelectedOptions: hideSelectedOptions,\n      data: data,\n      placeholder: placeholder,\n      disabled: disabled,\n      isDataLoading: isDataLoading,\n      isDataLoaded: isDataLoaded,\n      searchMode: searchMode,\n      url: url,\n      size: size,\n      method: method,\n      extraPayload: extraPayload,\n      isDataLoadingFailed: isDataLoadingFailed,\n      dataListKey: dataListKey,\n      defaultData: defaultData,\n      displayWith: displayWith,\n      compareWith: compareWith,\n      isClearable: isClearable,\n      value: formControlValue,\n      searchable: searchable,\n      hasError: errorMessage || hasError,\n      errorMessage: errorMessage || _.get(errors, name),\n      noDataMessage: noDataMessage,\n      onSelectUpdate: onBlur,\n      onUpdate: newValue => {\n        onValueChange(newValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormikSelectDropdownComponent, \"qjpIVOaugXYL9hGfKMjCIyhnuxk=\");\n\n_c = FormikSelectDropdownComponent;\nexport default FormikSelectDropdownComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormikSelectDropdownComponent\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","SelectDropdownComponent","_","FormikSelectDropdownComponent","props","className","labelText","formikField","required","errorMessage","onUpdate","disabled","id","data","url","extraPayload","defaultData","placeholder","noDataMessage","searchable","searchMode","multiple","method","isClearable","dataListKey","hideSelectedOptions","isDataLoading","isDataLoaded","isDataLoadingFailed","size","fullWidth","displayWith","compareWith","undefined","option","title","code","field","form","name","value","setFieldTouched","touched","errors","setFieldValue","hasError","get","formControlValue","setFormControlValue","showLabel","length","onValueChange","tempValue","onBlur","newValue"],"sources":["/Users/saicharanchinna/Documents/Arty-Crafty-UI/src/shared/components/core/formik-select-dropdown/FormikSelectDropdownComponent.tsx"],"sourcesContent":["import \"./FormikSelectDropdownComponent.scss\";\nimport React, {ReactNode, useCallback, useEffect, useState} from \"react\";\nimport {FieldProps} from \"formik\";\nimport SelectDropdownComponent from \"../select-dropdown/SelectDropdownComponent\";\nimport _ from \"lodash\";\n\nexport interface FormikSelectDropdownComponentProps {\n    labelText?: string;\n    size?: \"sm\" | \"lg\" | \"xl\";\n    placeholder?: string;\n    fullWidth?: boolean;\n    multiple?: boolean;\n    id?: string;\n    isDataLoading?: boolean;\n    isDataLoaded?: boolean;\n    isDataLoadingFailed?: boolean;\n    data?: any[];\n    disabled?: boolean;\n    onUpdate?: (text: any) => void;\n    hasError?: boolean;\n    className?: string;\n    showLabel?: boolean;\n    required?: boolean;\n    errorMessage?: any;\n    isClearable?: boolean;\n    displayWith?: (option: any) => any;\n    compareWith?: (option: any) => any;\n    searchable?: boolean;\n    noDataMessage?: ReactNode;\n    hideSelectedOptions?: boolean;\n    searchMode?: \"clientSide\" | \"serverSide\",\n    method?: any;\n    url?: string,\n    extraPayload?: object;\n    dataListKey?: string;\n    defaultData?: any[],\n    formikField: FieldProps;\n}\n\nconst FormikSelectDropdownComponent = (props: FormikSelectDropdownComponentProps) => {\n\n    const {\n        className,\n        labelText,\n        formikField,\n        required,\n        errorMessage,\n        onUpdate,\n        disabled,\n        id,\n        data,\n        url,\n        extraPayload,\n        defaultData,\n    } = props;\n\n    let {\n        placeholder,\n        noDataMessage,\n        searchable,\n        searchMode,\n        multiple,\n        method,\n        isClearable,\n        dataListKey,\n        hideSelectedOptions,\n        isDataLoading,\n        isDataLoaded,\n        isDataLoadingFailed,\n        size,\n        fullWidth,\n        displayWith,\n        compareWith\n    } = props;\n    if (!placeholder) placeholder = \"Select Your Option\";\n    if (!method) method = \"get\";\n    if (!size) size = \"lg\";\n    if (!searchMode) searchMode = \"clientSide\";\n    if (!dataListKey) dataListKey = \"data.docs\";\n    if (hideSelectedOptions === undefined) hideSelectedOptions = true;\n    if (isClearable === undefined) isClearable = true;\n    if (searchable === undefined) searchable = true;\n    if (multiple === undefined) multiple = false;\n    if (fullWidth === undefined) fullWidth = true;\n    if (!displayWith) displayWith = (option: any) => option?.title;\n    if (!compareWith) compareWith = (option: any) => option?.code;\n    if (!noDataMessage) noDataMessage = <div>No Data</div>;\n\n    const {field, form} = formikField;\n    const {name, value} = field;\n    const {setFieldTouched, touched, errors, setFieldValue} = form;\n    const hasError = _.get(touched, name) && errors && _.get(errors, name);\n    const [formControlValue, setFormControlValue] = useState(value);\n    const showLabel =\n        props.showLabel !== undefined\n            ? props.showLabel\n            : !!(labelText && labelText.length > 0);\n\n    const onValueChange = useCallback((value: any) => {\n        let tempValue = value || '';\n        setFormControlValue(tempValue);\n        setFieldValue(name, tempValue);\n        setFieldTouched(name);\n        if (onUpdate) {\n            onUpdate(tempValue)\n        }\n    }, [name, onUpdate, setFieldTouched, setFieldValue, setFormControlValue]);\n\n    const onBlur = useCallback((value: any) => {\n        setFieldTouched(name);\n    }, [name, setFieldTouched]);\n\n    useEffect(() => {\n        setFormControlValue(value || '');\n    }, [value]);\n\n    return (\n        <div\n            className={`formik-select-dropdown-component component`}>\n            <SelectDropdownComponent\n                id={id}\n                showLabel={showLabel}\n                labelText={labelText}\n                required={required}\n                fullWidth={fullWidth}\n                className={className}\n                multiple={multiple}\n                hideSelectedOptions={hideSelectedOptions}\n                data={data}\n                placeholder={placeholder}\n                disabled={disabled}\n                isDataLoading={isDataLoading}\n                isDataLoaded={isDataLoaded}\n                searchMode={searchMode}\n                url={url}\n                size={size}\n                method={method}\n                extraPayload={extraPayload}\n                isDataLoadingFailed={isDataLoadingFailed}\n                dataListKey={dataListKey}\n                defaultData={defaultData}\n                displayWith={displayWith}\n                compareWith={compareWith}\n                isClearable={isClearable}\n                value={formControlValue}\n                searchable={searchable}\n                hasError={(errorMessage || hasError)}\n                errorMessage={errorMessage || _.get(errors, name)}\n                noDataMessage={noDataMessage}\n                onSelectUpdate={onBlur}\n                onUpdate={(newValue) => {\n                    onValueChange(newValue);\n                }}\n            />\n        </div>\n    );\n\n};\n\nexport default FormikSelectDropdownComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}