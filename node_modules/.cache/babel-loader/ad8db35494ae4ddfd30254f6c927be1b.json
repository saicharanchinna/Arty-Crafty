{"ast":null,"code":"var _jsxFileName = \"/Users/saicharanchinna/Documents/Arty-Crafty-UI/src/shared/components/core/radio-button/RadioButtonComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./RadioButtonComponent.scss\";\nimport LabelComponent from \"../label/LabelComponent\";\nimport ErrorTextComponent from \"../error/ErrorTextComponent\";\nimport { useCallback, useRef } from \"react\";\nimport StatusCardComponent from \"../../status-card/statusCardComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RadioButtonGroupComponent = props => {\n  const {\n    options,\n    onUpdate,\n    labelText,\n    value,\n    required,\n    name,\n    errorMessage,\n    hasError,\n    id\n  } = props;\n  let {\n    direction,\n    displayWith,\n    compareWith,\n    isValueBoolean\n  } = props;\n  if (!direction) direction = \"column\";\n  const showLabel = props.showLabel !== undefined ? props.showLabel : !!(labelText && labelText.length > 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'radio-button-group-component component',\n    id: id,\n    children: [showLabel && /*#__PURE__*/_jsxDEV(LabelComponent, {\n      required: required,\n      title: labelText || '',\n      hasError: hasError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `radio-button-group-container ${direction}`,\n      children: [options && (options === null || options === void 0 ? void 0 : options.length) > 0 && options.map((option, index) => {\n        return /*#__PURE__*/_jsxDEV(RadioButtonComponent, {\n          value: value,\n          option: option,\n          displayWith: displayWith,\n          compareWith: compareWith,\n          onUpdate: value => {\n            if (onUpdate) {\n              onUpdate(value);\n            }\n          },\n          isValueBoolean: isValueBoolean,\n          name: name\n        }, option['code'], false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 32\n        }, this);\n      }), (options === null || options === void 0 ? void 0 : options.length) === 0 && /*#__PURE__*/_jsxDEV(StatusCardComponent, {\n        children: \"No Options Provided\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 48\n      }, this), errorMessage && hasError && /*#__PURE__*/_jsxDEV(ErrorTextComponent, {\n        error: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_c = RadioButtonGroupComponent;\nexport default RadioButtonGroupComponent;\nexport const RadioButtonComponent = props => {\n  _s();\n\n  const {\n    name,\n    option,\n    onUpdate,\n    value\n  } = props;\n  const radioRef = useRef();\n  let {\n    displayWith\n  } = props;\n  const compareWith = props.compareWith ? props.compareWith : option => option === null || option === void 0 ? void 0 : option.code;\n  if (!displayWith) displayWith = option => option === null || option === void 0 ? void 0 : option.title;\n  const handleChange = useCallback(value => {\n    if (onUpdate) {\n      onUpdate(value);\n    }\n  }, [onUpdate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `radio-button-component component ${compareWith(option) === value ? 'checked' : ''}`,\n      onClick: () => {\n        console.log(\"clicked\", \"name\", name, compareWith(option));\n        handleChange(compareWith(option));\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: name + '.' + compareWith(option),\n        name: name,\n        ref: ref => radioRef.current = ref,\n        className: `radio-button-control-input`,\n        onChange: event => {\n          handleChange(event.currentTarget.value);\n        },\n        value: compareWith(option),\n        defaultChecked: compareWith(option) === value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"radio-button-control-label\",\n        htmlFor: name + '.' + compareWith(option),\n        children: displayWith(option)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(RadioButtonComponent, \"m7vlFRdfBNr3J3l5pIiQAa5hoPc=\");\n\n_c2 = RadioButtonComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RadioButtonGroupComponent\");\n$RefreshReg$(_c2, \"RadioButtonComponent\");","map":{"version":3,"names":["LabelComponent","ErrorTextComponent","useCallback","useRef","StatusCardComponent","RadioButtonGroupComponent","props","options","onUpdate","labelText","value","required","name","errorMessage","hasError","id","direction","displayWith","compareWith","isValueBoolean","showLabel","undefined","length","map","option","index","RadioButtonComponent","radioRef","code","title","handleChange","console","log","ref","current","event","currentTarget"],"sources":["/Users/saicharanchinna/Documents/Arty-Crafty-UI/src/shared/components/core/radio-button/RadioButtonComponent.tsx"],"sourcesContent":["import \"./RadioButtonComponent.scss\";\nimport LabelComponent from \"../label/LabelComponent\";\nimport ErrorTextComponent from \"../error/ErrorTextComponent\";\nimport {useCallback, useRef} from \"react\";\nimport StatusCardComponent from \"../../status-card/statusCardComponent\";\n\nexport interface RadioButtonGroupComponentProps {\n    name: string;\n    options?: any[];\n    isValueBoolean?: boolean; // ***** this must be TRUE when value is a boolean type value *****\n    direction?: \"row\" | \"column\";\n    required?: boolean;\n    onUpdate?: Function;\n    value?: any;\n    id?: any,\n    labelText?: string;\n    showLabel?: boolean;\n    displayWith?: (option: any) => any;\n    compareWith?: (option: any) => any;\n    hasError?: boolean;\n    errorMessage?: any;\n}\n\nconst RadioButtonGroupComponent = (props: RadioButtonGroupComponentProps) => {\n\n    const {options, onUpdate, labelText, value, required, name, errorMessage, hasError, id} = props;\n\n    let {direction, displayWith, compareWith, isValueBoolean} = props;\n\n    if (!direction) direction = \"column\";\n\n    const showLabel =\n        props.showLabel !== undefined\n            ? props.showLabel\n            : !!(labelText && labelText.length > 0);\n\n    return (\n        <div className={'radio-button-group-component component'} id={id}>\n            {showLabel && <LabelComponent required={required} title={labelText || ''} hasError={hasError}/>}\n            <div className={`radio-button-group-container ${direction}`}>\n                {\n                    (options && options?.length > 0) && options.map((option: any, index) => {\n                        return <RadioButtonComponent\n                            key={option['code']}\n                            value={value}\n                            option={option}\n                            displayWith={displayWith}\n                            compareWith={compareWith}\n                            onUpdate={(value: any) => {\n                                if (onUpdate) {\n                                    onUpdate(value);\n                                }\n                            }\n                            }\n                            isValueBoolean={isValueBoolean}\n                            name={name}/>\n                    })\n                }\n                {\n                    (options?.length === 0) && <StatusCardComponent>\n                        No Options Provided\n                    </StatusCardComponent>\n                }\n                {(errorMessage && hasError) && (\n                    <ErrorTextComponent error={errorMessage}/>\n                )}\n            </div>\n        </div>\n    );\n\n};\n\nexport default RadioButtonGroupComponent;\n\n\ninterface RadioButtonComponentProps {\n    option: any;\n    name: string;\n    onUpdate?: Function;\n    value: any;\n    isValueBoolean?: boolean;\n    displayWith?: (option: any) => any;\n    compareWith?: (option: any) => any;\n}\n\nexport const RadioButtonComponent = (props: RadioButtonComponentProps) => {\n\n    const {name, option, onUpdate, value} = props;\n    const radioRef = useRef<HTMLInputElement | null>();\n    let {displayWith} = props;\n\n    const compareWith = props.compareWith ? props.compareWith : (option: any) => option?.code;\n    if (!displayWith) displayWith = (option: any) => option?.title;\n\n    const handleChange = useCallback((value: any) => {\n        if (onUpdate) {\n            onUpdate(value);\n        }\n    }, [onUpdate]);\n\n    return <>\n        <div className={`radio-button-component component ${compareWith(option) === value ? 'checked' : ''}`}\n             onClick={() => {\n                 console.log(\"clicked\", \"name\", name, compareWith(option));\n                 handleChange(compareWith(option));\n             }}>\n            <input\n                type=\"radio\"\n                id={name + '.' + compareWith(option)}\n                name={name}\n                ref={ref => (radioRef.current = ref)}\n                className={`radio-button-control-input`}\n                onChange={(event: any) => {\n                    handleChange(event.currentTarget.value)\n                }}\n                value={compareWith(option)}\n                defaultChecked={compareWith(option) === value}\n            />\n            <label\n                className=\"radio-button-control-label\"\n                htmlFor={name + '.' + compareWith(option)}\n            >\n                {displayWith(option)}\n            </label>\n\n        </div>\n    </>;\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}