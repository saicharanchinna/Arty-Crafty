{"ast":null,"code":"import axios from 'axios';\nimport Communications from \"./communications.service\";\nimport { ENV, Misc } from \"../../constants\";\nimport localStorageService from \"./local-storage.service\";\nexport const defaultHeaders = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json'\n};\nexport const AXIOS_REQUEST_CANCELLED = 'AXIOS_REQUEST_CANCELLED';\nlet jwtToken = localStorageService.getItem(Misc.LOCAL_STORAGE_JWT_TOKEN) || '';\nCommunications.updateLoginUserTokenSubject.subscribe(token => {\n  jwtToken = token;\n});\n\nconst getHeaders = headers => {\n  const AuthorizationHeaders = {\n    'Authorization': 'Bearer ' + jwtToken\n  };\n  headers = { ...defaultHeaders,\n    ...AuthorizationHeaders,\n    ...headers\n  };\n  return headers;\n};\n\nconst ApiService = {\n  post: function (url) {\n    let payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let progressCallback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : progress => {};\n    const axiosOptions = {\n      headers: getHeaders(headers),\n      ...options,\n      onUploadProgress: uploadProgressHandler.bind(null, progressCallback)\n    };\n    let request = axios.post(url, payload, axiosOptions);\n    return getRequestPromise(request);\n  },\n  put: function (url) {\n    let payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let progressCallback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : progress => {};\n    const axiosOptions = {\n      headers: getHeaders(headers),\n      ...options,\n      onUploadProgress: uploadProgressHandler.bind(null, progressCallback)\n    };\n    let request = axios.put(url, payload, axiosOptions);\n    return getRequestPromise(request);\n  },\n  upload: function (url) {\n    let payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new FormData();\n    let headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let progressCallback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : progress => {};\n    const axiosOptions = {\n      headers: getHeaders({ ...headers\n      }),\n      ...options,\n      onUploadProgress: uploadProgressHandler.bind(null, progressCallback)\n    };\n    let request = axios.post(url, payload, axiosOptions);\n    return getRequestPromise(request);\n  },\n  get: function (url) {\n    let payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const axiosOptions = {\n      headers: getHeaders(headers),\n      params: payload,\n      ...options\n    };\n    let request = axios.get(url, axiosOptions);\n    return getRequestPromise(request);\n  },\n  delete: function (url) {\n    let payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    // options = getParsedOptions(headers, options);\n    const axiosOptions = {\n      headers: getHeaders(headers),\n      data: payload,\n      ...options\n    };\n    let request = axios.delete(url, axiosOptions);\n    return getRequestPromise(request);\n  }\n};\n\nconst uploadProgressHandler = (progressCallback, progressEvent) => {\n  if (progressCallback) {\n    const percentFraction = progressEvent.loaded / progressEvent.total;\n    const percent = Math.floor(percentFraction * 100);\n    progressCallback(percent);\n  }\n};\n\nconst getRequestPromise = request => {\n  return new Promise((resolve, reject) => {\n    request.then(resp => {\n      if (ENV.ENABLE_HTTP_LOGS) {\n        console.log('====>>>>>>', resp.data);\n      } // @ts-ignore\n\n\n      resolve({ ...resp.data,\n        status: resp.status\n      });\n    }).catch(err => {\n      if (ENV.ENABLE_HTTP_LOGS) {\n        console.error('=====>', err, 'API Error');\n      }\n\n      try {\n        const response = err.response ? err.response : {\n          data: null\n        };\n        let error = response.data ? { ...response.data\n        } : {\n          status: 500\n        };\n        error.status = response.status ? parseInt(response.status) : 500;\n\n        if (error.status === 401) {\n          Communications.logoutSubject.next();\n        }\n\n        if (error.status === 403) {\n          Communications.ReloadStateSubject.next();\n        }\n\n        if (axios.isCancel(err)) {\n          error.status = 499;\n          error.reason = AXIOS_REQUEST_CANCELLED;\n        }\n\n        reject(error);\n      } catch (e) {\n        console.error('=====>', e, 'Api Function Catch');\n      }\n    });\n  });\n};\n\nexport default ApiService;","map":{"version":3,"names":["axios","Communications","ENV","Misc","localStorageService","defaultHeaders","Accept","AXIOS_REQUEST_CANCELLED","jwtToken","getItem","LOCAL_STORAGE_JWT_TOKEN","updateLoginUserTokenSubject","subscribe","token","getHeaders","headers","AuthorizationHeaders","ApiService","post","url","payload","options","progressCallback","progress","axiosOptions","onUploadProgress","uploadProgressHandler","bind","request","getRequestPromise","put","upload","FormData","get","params","delete","data","progressEvent","percentFraction","loaded","total","percent","Math","floor","Promise","resolve","reject","then","resp","ENABLE_HTTP_LOGS","console","log","status","catch","err","error","response","parseInt","logoutSubject","next","ReloadStateSubject","isCancel","reason","e"],"sources":["/Users/saicharanchinna/Documents/Arty-Crafty-UI/src/shared/services/api.service.ts"],"sourcesContent":["import axios, {\n    AxiosRequestConfig,\n    AxiosResponse,\n} from 'axios';\nimport Communications from \"./communications.service\";\nimport {ENV, Misc} from \"../../constants\";\nimport { IAPIResponseType, IAxiosOptions } from \"../models/api.model\";\nimport localStorageService from \"./local-storage.service\";\n\nexport const defaultHeaders = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n};\n\nexport const AXIOS_REQUEST_CANCELLED = 'AXIOS_REQUEST_CANCELLED';\n\nlet jwtToken: string | undefined = localStorageService.getItem(Misc.LOCAL_STORAGE_JWT_TOKEN) || '';\n\nCommunications.updateLoginUserTokenSubject.subscribe((token: string | undefined) => {\n    jwtToken = token;\n});\n\nconst getHeaders = (headers: any) => {\n    const AuthorizationHeaders = {'Authorization': 'Bearer ' + jwtToken};\n    headers = {\n        ...defaultHeaders, ...AuthorizationHeaders, ...headers\n    };\n    return headers;\n}\n\nconst ApiService = {\n    post: (url: string, payload = {},\n           headers = {}, options: IAxiosOptions = {},\n           progressCallback: (progress: number) => void = (progress) => {\n           }): Promise<IAPIResponseType<any>> => {\n        const axiosOptions: AxiosRequestConfig = {\n            headers: getHeaders(headers),\n            ...options,\n            onUploadProgress: uploadProgressHandler.bind(null, progressCallback)\n        };\n        let request = axios.post(url, payload, axiosOptions);\n        return getRequestPromise(request);\n    },\n    put: (url: string, payload = {},\n          headers = {}, options: IAxiosOptions = {},\n          progressCallback: (progress: number) => void = (progress) => {\n          }): Promise<IAPIResponseType<any>> => {\n        const axiosOptions: AxiosRequestConfig = {\n            headers: getHeaders(headers),\n            ...options,\n            onUploadProgress: uploadProgressHandler.bind(null, progressCallback)\n        };\n        let request = axios.put(url, payload, axiosOptions);\n        return getRequestPromise(request);\n    },\n    upload: (url: string, payload = new FormData(),\n             headers = {}, options: IAxiosOptions = {},\n             progressCallback: (progress: number) => void = (progress) => {\n             }): Promise<IAPIResponseType<any>> => {\n        const axiosOptions: AxiosRequestConfig = {\n            headers: getHeaders({...headers}),\n            ...options,\n            onUploadProgress: uploadProgressHandler.bind(null, progressCallback)\n        };\n        let request = axios.post(url, payload, axiosOptions);\n        return getRequestPromise(request);\n    },\n    get: (url: string, payload = {}, headers = {},\n          options: IAxiosOptions = {}): Promise<IAPIResponseType<any>> => {\n        const axiosOptions: AxiosRequestConfig = {\n            headers: getHeaders(headers),\n            params: payload,\n            ...options,\n        };\n        let request = axios.get(url, axiosOptions);\n        return getRequestPromise(request);\n    },\n    delete: (url: string, payload = {}, headers = {},\n             options: IAxiosOptions = {}): Promise<IAPIResponseType<any>> => {\n        // options = getParsedOptions(headers, options);\n        const axiosOptions: AxiosRequestConfig = {\n            headers: getHeaders(headers),\n            data: payload,\n            ...options\n        };\n        let request = axios.delete(url, axiosOptions);\n        return getRequestPromise(request);\n    }\n}\n\nconst uploadProgressHandler = (progressCallback: (progress: number) => void, progressEvent: any) => {\n    if (progressCallback) {\n        const percentFraction = progressEvent.loaded / progressEvent.total;\n        const percent = Math.floor(percentFraction * 100);\n        progressCallback(percent);\n    }\n}\n\nconst getRequestPromise = (request: Promise<AxiosResponse>) => {\n    return new Promise<any>((resolve, reject) => {\n        request\n            .then((resp) => {\n                if (ENV.ENABLE_HTTP_LOGS) {\n                    console.log('====>>>>>>', resp.data);\n                }\n                // @ts-ignore\n                resolve({...resp.data, status: resp.status});\n            })\n            .catch((err: any) => {\n                if (ENV.ENABLE_HTTP_LOGS) {\n                    console.error('=====>', err, 'API Error');\n                }\n                try {\n                    const response: any = (err.response) ? err.response : {data: null};\n                    let error: any = (response.data) ? {...response.data} : {status: 500};\n                    error.status = response.status ? parseInt(response.status) : 500;\n                    if (error.status === 401) {\n                        Communications.logoutSubject.next();\n                    }\n                    if (error.status === 403) {\n                        Communications.ReloadStateSubject.next();\n                    }\n                    if (axios.isCancel(err)) {\n                        error.status = 499;\n                        error.reason = AXIOS_REQUEST_CANCELLED;\n                    }\n                    reject(error);\n                } catch (e) {\n                    console.error('=====>', e, 'Api Function Catch');\n                }\n            });\n    });\n}\n\nexport default ApiService;\n"],"mappings":"AAAA,OAAOA,KAAP,MAGO,OAHP;AAIA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAAQC,GAAR,EAAaC,IAAb,QAAwB,iBAAxB;AAEA,OAAOC,mBAAP,MAAgC,yBAAhC;AAEA,OAAO,MAAMC,cAAc,GAAG;EAC1BC,MAAM,EAAE,kBADkB;EAE1B,gBAAgB;AAFU,CAAvB;AAKP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AAEP,IAAIC,QAA4B,GAAGJ,mBAAmB,CAACK,OAApB,CAA4BN,IAAI,CAACO,uBAAjC,KAA6D,EAAhG;AAEAT,cAAc,CAACU,2BAAf,CAA2CC,SAA3C,CAAsDC,KAAD,IAA+B;EAChFL,QAAQ,GAAGK,KAAX;AACH,CAFD;;AAIA,MAAMC,UAAU,GAAIC,OAAD,IAAkB;EACjC,MAAMC,oBAAoB,GAAG;IAAC,iBAAiB,YAAYR;EAA9B,CAA7B;EACAO,OAAO,GAAG,EACN,GAAGV,cADG;IACa,GAAGW,oBADhB;IACsC,GAAGD;EADzC,CAAV;EAGA,OAAOA,OAAP;AACH,CAND;;AAQA,MAAME,UAAU,GAAG;EACfC,IAAI,EAAE,UAACC,GAAD,EAGuC;IAAA,IAHzBC,OAGyB,uEAHf,EAGe;IAAA,IAFtCL,OAEsC,uEAF5B,EAE4B;IAAA,IAFxBM,OAEwB,uEAFC,EAED;IAAA,IADtCC,gBACsC,uEADUC,QAAD,IAAc,CAC5D,CAAqC;IACzC,MAAMC,YAAgC,GAAG;MACrCT,OAAO,EAAED,UAAU,CAACC,OAAD,CADkB;MAErC,GAAGM,OAFkC;MAGrCI,gBAAgB,EAAEC,qBAAqB,CAACC,IAAtB,CAA2B,IAA3B,EAAiCL,gBAAjC;IAHmB,CAAzC;IAKA,IAAIM,OAAO,GAAG5B,KAAK,CAACkB,IAAN,CAAWC,GAAX,EAAgBC,OAAhB,EAAyBI,YAAzB,CAAd;IACA,OAAOK,iBAAiB,CAACD,OAAD,CAAxB;EACH,CAZc;EAafE,GAAG,EAAE,UAACX,GAAD,EAGuC;IAAA,IAHzBC,OAGyB,uEAHf,EAGe;IAAA,IAFtCL,OAEsC,uEAF5B,EAE4B;IAAA,IAFxBM,OAEwB,uEAFC,EAED;IAAA,IADtCC,gBACsC,uEADUC,QAAD,IAAc,CAC5D,CAAqC;IACxC,MAAMC,YAAgC,GAAG;MACrCT,OAAO,EAAED,UAAU,CAACC,OAAD,CADkB;MAErC,GAAGM,OAFkC;MAGrCI,gBAAgB,EAAEC,qBAAqB,CAACC,IAAtB,CAA2B,IAA3B,EAAiCL,gBAAjC;IAHmB,CAAzC;IAKA,IAAIM,OAAO,GAAG5B,KAAK,CAAC8B,GAAN,CAAUX,GAAV,EAAeC,OAAf,EAAwBI,YAAxB,CAAd;IACA,OAAOK,iBAAiB,CAACD,OAAD,CAAxB;EACH,CAxBc;EAyBfG,MAAM,EAAE,UAACZ,GAAD,EAGuC;IAAA,IAHzBC,OAGyB,uEAHf,IAAIY,QAAJ,EAGe;IAAA,IAFtCjB,OAEsC,uEAF5B,EAE4B;IAAA,IAFxBM,OAEwB,uEAFC,EAED;IAAA,IADtCC,gBACsC,uEADUC,QAAD,IAAc,CAC5D,CAAqC;IAC3C,MAAMC,YAAgC,GAAG;MACrCT,OAAO,EAAED,UAAU,CAAC,EAAC,GAAGC;MAAJ,CAAD,CADkB;MAErC,GAAGM,OAFkC;MAGrCI,gBAAgB,EAAEC,qBAAqB,CAACC,IAAtB,CAA2B,IAA3B,EAAiCL,gBAAjC;IAHmB,CAAzC;IAKA,IAAIM,OAAO,GAAG5B,KAAK,CAACkB,IAAN,CAAWC,GAAX,EAAgBC,OAAhB,EAAyBI,YAAzB,CAAd;IACA,OAAOK,iBAAiB,CAACD,OAAD,CAAxB;EACH,CApCc;EAqCfK,GAAG,EAAE,UAACd,GAAD,EACiE;IAAA,IADnDC,OACmD,uEADzC,EACyC;IAAA,IADrCL,OACqC,uEAD3B,EAC2B;IAAA,IAAhEM,OAAgE,uEAAvC,EAAuC;IAClE,MAAMG,YAAgC,GAAG;MACrCT,OAAO,EAAED,UAAU,CAACC,OAAD,CADkB;MAErCmB,MAAM,EAAEd,OAF6B;MAGrC,GAAGC;IAHkC,CAAzC;IAKA,IAAIO,OAAO,GAAG5B,KAAK,CAACiC,GAAN,CAAUd,GAAV,EAAeK,YAAf,CAAd;IACA,OAAOK,iBAAiB,CAACD,OAAD,CAAxB;EACH,CA9Cc;EA+CfO,MAAM,EAAE,UAAChB,GAAD,EACiE;IAAA,IADnDC,OACmD,uEADzC,EACyC;IAAA,IADrCL,OACqC,uEAD3B,EAC2B;IAAA,IAAhEM,OAAgE,uEAAvC,EAAuC;IACrE;IACA,MAAMG,YAAgC,GAAG;MACrCT,OAAO,EAAED,UAAU,CAACC,OAAD,CADkB;MAErCqB,IAAI,EAAEhB,OAF+B;MAGrC,GAAGC;IAHkC,CAAzC;IAKA,IAAIO,OAAO,GAAG5B,KAAK,CAACmC,MAAN,CAAahB,GAAb,EAAkBK,YAAlB,CAAd;IACA,OAAOK,iBAAiB,CAACD,OAAD,CAAxB;EACH;AAzDc,CAAnB;;AA4DA,MAAMF,qBAAqB,GAAG,CAACJ,gBAAD,EAA+Ce,aAA/C,KAAsE;EAChG,IAAIf,gBAAJ,EAAsB;IAClB,MAAMgB,eAAe,GAAGD,aAAa,CAACE,MAAd,GAAuBF,aAAa,CAACG,KAA7D;IACA,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWL,eAAe,GAAG,GAA7B,CAAhB;IACAhB,gBAAgB,CAACmB,OAAD,CAAhB;EACH;AACJ,CAND;;AAQA,MAAMZ,iBAAiB,GAAID,OAAD,IAAqC;EAC3D,OAAO,IAAIgB,OAAJ,CAAiB,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACzClB,OAAO,CACFmB,IADL,CACWC,IAAD,IAAU;MACZ,IAAI9C,GAAG,CAAC+C,gBAAR,EAA0B;QACtBC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,IAAI,CAACZ,IAA/B;MACH,CAHW,CAIZ;;;MACAS,OAAO,CAAC,EAAC,GAAGG,IAAI,CAACZ,IAAT;QAAegB,MAAM,EAAEJ,IAAI,CAACI;MAA5B,CAAD,CAAP;IACH,CAPL,EAQKC,KARL,CAQYC,GAAD,IAAc;MACjB,IAAIpD,GAAG,CAAC+C,gBAAR,EAA0B;QACtBC,OAAO,CAACK,KAAR,CAAc,QAAd,EAAwBD,GAAxB,EAA6B,WAA7B;MACH;;MACD,IAAI;QACA,MAAME,QAAa,GAAIF,GAAG,CAACE,QAAL,GAAiBF,GAAG,CAACE,QAArB,GAAgC;UAACpB,IAAI,EAAE;QAAP,CAAtD;QACA,IAAImB,KAAU,GAAIC,QAAQ,CAACpB,IAAV,GAAkB,EAAC,GAAGoB,QAAQ,CAACpB;QAAb,CAAlB,GAAuC;UAACgB,MAAM,EAAE;QAAT,CAAxD;QACAG,KAAK,CAACH,MAAN,GAAeI,QAAQ,CAACJ,MAAT,GAAkBK,QAAQ,CAACD,QAAQ,CAACJ,MAAV,CAA1B,GAA8C,GAA7D;;QACA,IAAIG,KAAK,CAACH,MAAN,KAAiB,GAArB,EAA0B;UACtBnD,cAAc,CAACyD,aAAf,CAA6BC,IAA7B;QACH;;QACD,IAAIJ,KAAK,CAACH,MAAN,KAAiB,GAArB,EAA0B;UACtBnD,cAAc,CAAC2D,kBAAf,CAAkCD,IAAlC;QACH;;QACD,IAAI3D,KAAK,CAAC6D,QAAN,CAAeP,GAAf,CAAJ,EAAyB;UACrBC,KAAK,CAACH,MAAN,GAAe,GAAf;UACAG,KAAK,CAACO,MAAN,GAAevD,uBAAf;QACH;;QACDuC,MAAM,CAACS,KAAD,CAAN;MACH,CAfD,CAeE,OAAOQ,CAAP,EAAU;QACRb,OAAO,CAACK,KAAR,CAAc,QAAd,EAAwBQ,CAAxB,EAA2B,oBAA3B;MACH;IACJ,CA9BL;EA+BH,CAhCM,CAAP;AAiCH,CAlCD;;AAoCA,eAAe9C,UAAf"},"metadata":{},"sourceType":"module"}