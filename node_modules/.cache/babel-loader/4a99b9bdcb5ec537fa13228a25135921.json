{"ast":null,"code":"import { ascending, bisect } from \"d3-array\";\nimport { identity } from \"./continuous\";\nimport { initInterpolator } from \"./init\";\nexport default function sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return interpolator((bisect(domain, x) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function (_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\n    domain.sort(ascending);\n    return scale;\n  };\n\n  scale.interpolator = function (_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function () {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}","map":{"version":3,"names":["ascending","bisect","identity","initInterpolator","sequentialQuantile","domain","interpolator","scale","x","isNaN","length","_","arguments","slice","i","n","d","push","sort","copy","apply"],"sources":["/Users/saicharanchinna/Documents/Arty-Crafty-UI/node_modules/d3-scale/src/sequentialQuantile.js"],"sourcesContent":["import {ascending, bisect} from \"d3-array\";\nimport {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\n\nexport default function sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return interpolator((bisect(domain, x) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,MAAnB,QAAgC,UAAhC;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,SAAQC,gBAAR,QAA+B,QAA/B;AAEA,eAAe,SAASC,kBAAT,GAA8B;EAC3C,IAAIC,MAAM,GAAG,EAAb;EAAA,IACIC,YAAY,GAAGJ,QADnB;;EAGA,SAASK,KAAT,CAAeC,CAAf,EAAkB;IAChB,IAAI,CAACC,KAAK,CAACD,CAAC,GAAG,CAACA,CAAN,CAAV,EAAoB,OAAOF,YAAY,CAAC,CAACL,MAAM,CAACI,MAAD,EAASG,CAAT,CAAN,GAAoB,CAArB,KAA2BH,MAAM,CAACK,MAAP,GAAgB,CAA3C,CAAD,CAAnB;EACrB;;EAEDH,KAAK,CAACF,MAAN,GAAe,UAASM,CAAT,EAAY;IACzB,IAAI,CAACC,SAAS,CAACF,MAAf,EAAuB,OAAOL,MAAM,CAACQ,KAAP,EAAP;IACvBR,MAAM,GAAG,EAAT;;IACA,KAAK,IAAIS,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGJ,CAAC,CAACD,MAAjB,EAAyBM,CAA9B,EAAiCF,CAAC,GAAGC,CAArC,EAAwC,EAAED,CAA1C,EAA6C,IAAIE,CAAC,GAAGL,CAAC,CAACG,CAAD,CAAL,EAAUE,CAAC,IAAI,IAAL,IAAa,CAACP,KAAK,CAACO,CAAC,GAAG,CAACA,CAAN,CAAjC,EAA2CX,MAAM,CAACY,IAAP,CAAYD,CAAZ;;IACxFX,MAAM,CAACa,IAAP,CAAYlB,SAAZ;IACA,OAAOO,KAAP;EACD,CAND;;EAQAA,KAAK,CAACD,YAAN,GAAqB,UAASK,CAAT,EAAY;IAC/B,OAAOC,SAAS,CAACF,MAAV,IAAoBJ,YAAY,GAAGK,CAAf,EAAkBJ,KAAtC,IAA+CD,YAAtD;EACD,CAFD;;EAIAC,KAAK,CAACY,IAAN,GAAa,YAAW;IACtB,OAAOf,kBAAkB,CAACE,YAAD,CAAlB,CAAiCD,MAAjC,CAAwCA,MAAxC,CAAP;EACD,CAFD;;EAIA,OAAOF,gBAAgB,CAACiB,KAAjB,CAAuBb,KAAvB,EAA8BK,SAA9B,CAAP;AACD"},"metadata":{},"sourceType":"module"}