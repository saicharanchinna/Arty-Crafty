{"ast":null,"code":"import { range as sequence } from \"d3-array\";\nimport { initRange } from \"./init\";\nimport ordinal from \"./ordinal\";\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function (i) {\n      return start + step * i;\n    });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function (_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function () {\n    return bandwidth;\n  };\n\n  scale.step = function () {\n    return step;\n  };\n\n  scale.round = function (_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function (_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function (_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function (_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function (_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function () {\n    return band(domain(), range).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function () {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}","map":{"version":3,"names":["range","sequence","initRange","ordinal","band","scale","unknown","undefined","domain","ordinalRange","step","bandwidth","round","paddingInner","paddingOuter","align","rescale","n","length","reverse","start","stop","Math","max","floor","values","map","i","_","arguments","slice","rangeRound","padding","min","copy","apply","pointish","point"],"sources":["/Users/saicharanchinna/Documents/Arty-Crafty-UI/node_modules/d3-scale/src/band.js"],"sourcesContent":["import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}