{"ast":null,"code":"// import { call, put, takeEvery } from 'redux-saga/effects'\n// import {\n//     LOGIN_HTTP_REQUEST_FAILED,\n//     LOGIN_HTTP_REQUEST_IN_PROGRESS,\n//     LOGIN_HTTP_REQUEST_SUCCESS,\n//     MAKE_LOGIN_HTTP_REQUEST\n// } from \"../actions/account.action\";\n// import { CommonService } from \"../../shared/services\";\n// import {IAccountLoginCredentials, ILoginResponse} from \"../../shared/models/account.model\";\n// import { ENV } from \"../../constants\";\n// import { IAPIResponseType } from \"../../shared/models/api.model\";\n//\n// const loginAPICall = (action: { payload: IAccountLoginCredentials }) => {\n//     return CommonService._api.post(ENV.API_URL + '/register', action.payload)\n//         .then((response: IAPIResponseType) => {\n//             return response.data as ILoginResponse\n//         }).catch((error: IAPIResponseType) => {\n//             throw error.errors;\n//         });\n// }\n//\n// function* register(action: any) {\n//     try {\n//         yield put({type: LOGIN_HTTP_REQUEST_IN_PROGRESS});\n//         const loginAPIResponse: ILoginResponse = yield call(loginAPICall, action);\n//         yield put({type: LOGIN_HTTP_REQUEST_SUCCESS, payload: {response: loginAPIResponse}});\n//     } catch (error) {\n//         yield put({type: LOGIN_HTTP_REQUEST_FAILED, payload: error});\n//     }\n// }\n//\nexport default function* accountSaga() {// yield takeEvery(MAKE_LOGIN_HTTP_REQUEST, register);\n}","map":{"version":3,"names":["accountSaga"],"sources":["/Users/saicharanchinna/Documents/Arty-Crafty-UI/src/store/sagas/account.saga.ts"],"sourcesContent":["// import { call, put, takeEvery } from 'redux-saga/effects'\n// import {\n//     LOGIN_HTTP_REQUEST_FAILED,\n//     LOGIN_HTTP_REQUEST_IN_PROGRESS,\n//     LOGIN_HTTP_REQUEST_SUCCESS,\n//     MAKE_LOGIN_HTTP_REQUEST\n// } from \"../actions/account.action\";\n// import { CommonService } from \"../../shared/services\";\n// import {IAccountLoginCredentials, ILoginResponse} from \"../../shared/models/account.model\";\n// import { ENV } from \"../../constants\";\n// import { IAPIResponseType } from \"../../shared/models/api.model\";\n//\n// const loginAPICall = (action: { payload: IAccountLoginCredentials }) => {\n//     return CommonService._api.post(ENV.API_URL + '/register', action.payload)\n//         .then((response: IAPIResponseType) => {\n//             return response.data as ILoginResponse\n//         }).catch((error: IAPIResponseType) => {\n//             throw error.errors;\n//         });\n// }\n//\n// function* register(action: any) {\n//     try {\n//         yield put({type: LOGIN_HTTP_REQUEST_IN_PROGRESS});\n//         const loginAPIResponse: ILoginResponse = yield call(loginAPICall, action);\n//         yield put({type: LOGIN_HTTP_REQUEST_SUCCESS, payload: {response: loginAPIResponse}});\n//     } catch (error) {\n//         yield put({type: LOGIN_HTTP_REQUEST_FAILED, payload: error});\n//     }\n// }\n//\n\nexport default function* accountSaga() {\n    // yield takeEvery(MAKE_LOGIN_HTTP_REQUEST, register);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,UAAUA,WAAV,GAAwB,CACnC;AACH"},"metadata":{},"sourceType":"module"}